#include <Arduino.h>
#include <Talkie.h>
//#include "Vocab_US_TI99.h"
#include <Wire.h> 
#include <LiquidCrystal_I2C.h>

// Set the LCD address to 0x3F for a 16 chars and 2 line display
LiquidCrystal_I2C lcd(0x3F, 16, 2);
int state = 0;

Talkie voice;
const int8_t spSTOP[] PROGMEM ={0x0E,0xD8,0x5A,0x3D,0x02,0x11,0xF0,0x00,0x40,0x00,0xBA,0x0F,0x5F,0x85,0x4F,0xBD,0x2A,0x91,0xE4,0x16,0xB7,0xBA,0xD5,0x6D,0x6E,0x33,0x3A,0xDB,0xA7,0x94,0xC7,0xAE,0xEF,0x01,0x00,0x04,0xA0,0xBD,0x39,0x06,0xE0,0x01,0x00,0x00};
const int8_t spNUMBER[] PROGMEM ={0xA9,0x0D,0x0E,0x2A,0xDD,0x12,0xA7,0xD6,0x5B,0xE8,0x70,0x8F,0xBB,0x9A,0xAC,0x2D,0xCD,0xA4,0xF5,0xA9,0xA2,0xAA,0x4A,0xE5,0xC5,0xB7,0x38,0x99,0x57,0xD3,0xA6,0xD2,0xAA,0x64,0xCA,0x57,0xB8,0x50,0xE6,0x98,0xB9,0x9C,0xA6,0xE4,0x70,0x4B,0xEB,0x2B,0x53,0xE3,0x98,0xEA,0x61,0x6E,0x5D,0x67,0x3A,0x7B,0x3A,0xB7,0xEB,0x5D,0xEF,0x7A,0x5F,0xFB,0x34,0xD8,0x4D,0x9A,0x29,0xAD,0xFD,0xE8,0x26,0xD3,0x44,0x32,0xD5,0xAB,0x9B,0x5C,0x37,0xB2,0xE6,0xAC,0x66,0x8A,0x2B,0xC4,0x44,0xED,0x3E};
const int8_t spTEN[] PROGMEM ={0x0A,0xB0,0xDC,0xD4,0x01,0x83,0x86,0x28,0x20,0x85,0x10,0x01,0xB8,0x28,0x72,0xE2,0x34,0xCB,0x55,0xA2,0xEE,0x4D,0x6E,0x7A,0xB3,0x9B,0x9F,0x22,0x2E,0x77,0xF6,0x88,0x73,0xEB,0xDD,0xCE,0x2E,0x74,0xDE,0x42,0x4B,0x7A,0xA3,0xD8,0x85,0xDE,0x5B,0x18,0x89,0x4C,0xE9,0x7A,0x67,0xB0,0xC5,0x2B,0xA5,0xE9,0x95,0xE1,0x96,0xE8,0x84,0xAA,0xE7,0x4E,0xC3,0xEC,0x63,0x3F,0x00,0x00};



void looping_text();
void bus_announcement();

void setup() {
  // put your setup code here, to run once:
  Serial.begin(9600);   // Initiate a serial communication
// initialize the LCD
  lcd.begin();
  // Turn on the blacklight and print a message.
  lcd.backlight();
  pinMode(8, OUTPUT);
  digitalWrite(8, LOW);
// for the speaker
  voice.doNotUseInvertedOutput(true); //donâ€™t use port 11
  voice.doNotUseNonInvertedOutput(false); // use only port 3
}

void loop() {
  // put your main code here, to run repeatedly

  if (Serial.available()>0)
  {
    state = Serial.read();
  }
   if (state == '2')
  {
  // make the led blink when blink person has been recognized (until blind person moves away from the stop)
    digitalWrite(8, HIGH);
  }

  if (state == '1')
  {
    // speaker say arrived at station 
    // lcd screen say name of station
    lcd.setCursor(0,0);
   lcd.print("B1 AT ");
   lcd.setCursor(0,1);
   lcd.print("STOP 10 ");
    bus_announcement();
     looping_text();
    // lcd screen clear
   lcd.clear();
  }

  if (state == '3')
  {
  // make the led blink when blink person has been recognized (until blind person moves away from the stop)
    digitalWrite(8, LOW);
  }
  
}
void bus_announcement()
{
    delay(1000);
  voice.sayQ(spSTOP);
  voice.sayQ(spNUMBER);
  voice.sayQ(spTEN);
}


void looping_text() {
  // scroll 13 positions (string length) to the left
  // to move it offscreen left:
  for (int positionCounter = 0; positionCounter < 13; positionCounter++) {
    // scroll one position left:
    lcd.scrollDisplayLeft();
    // wait a bit:
    delay(250);
  }

  lcd.clear();
   lcd.setCursor(0,0);
   lcd.print("B1 AT ");
   lcd.setCursor(0,1);
   lcd.print("STOP 10 ");
    bus_announcement();
    
  // scroll 29 positions (string length + display length) to the right
  // to move it offscreen right:
  for (int positionCounter = 0; positionCounter < 29; positionCounter++) {
    // scroll one position right:
    lcd.scrollDisplayRight();
    // wait a bit:
    delay(250);
  }
  lcd.clear();
   lcd.setCursor(0,0);
   lcd.print("B1 AT ");
   lcd.setCursor(0,1);
   lcd.print("STOP 10 ");
    bus_announcement();
    
  lcd.clear();
}
